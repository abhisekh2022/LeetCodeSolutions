771. Jewels and Stones

You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.

Letters are case sensitive, so "a" is considered a different type of stone from "A".

 

Example 1:

Input: jewels = "aA", stones = "aAAbbbb"
Output: 3
Example 2:

Input: jewels = "z", stones = "ZZ"
Output: 0
 

Constraints:

1 <= jewels.length, stones.length <= 50
jewels and stones consist of only English letters.
All the characters of jewels are unique.

Java Solution1 - 

class Solution {
    public int numJewelsInStones(String jewels, String stones) {
        
        int count = 0 ;
        
        for (int i = 0 ; i < jewels.length() ; i++){
            for (int j = 0 ; j < stones.length() ; j++){
                if (jewels.charAt(i) == stones.charAt(j)) count++;
            }
        }
        return count;
    }
}

Java Solution2 using HashMap - 

class Solution {
    public int numJewelsInStones(String jewels, String stones) {
        HashMap<Character,Integer> map = new HashMap<>();
        int n = jewels.length();
        int m = stones.length();
        for(int i = 0 ; i < m ;i++){
            if(!map.containsKey(stones.charAt(i)))map.put(stones.charAt(i),1);
            else map.put(stones.charAt(i),map.get(stones.charAt(i))+1);
        }
        int count = 0;
        for(int j = 0 ; j < n; j++){
            if(!map.containsKey(jewels.charAt(j))) map.put(jewels.charAt(j),0);
            else count += map.get(jewels.charAt(j));
        }
        return count;
    }
}